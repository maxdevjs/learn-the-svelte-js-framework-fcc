{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "../../App.svelte",
    "../../HowTo.svelte",
    "../../ProgressBar.svelte",
    "../../Timer.svelte"
  ],
  "sourcesContent": [
    "<script>\n\timport Timer from './components/Timer.svelte'\n\timport HowTo from './components/HowTo.svelte'\n\n\tlet audio;\n\n\tconst timerEnds = (e) => {\n\t\taudio.play();\n\t};\n</script>\n\n<h1>Handwashing App</h1>\n\n<Timer  on:end={timerEnds} />\n<HowTo />\n<h3>\n\t<a href=\"https://www.who.int/gpsc/clean_hands_protection/en/\">Picture Source</a> | \n\t<a href=\"https://freesound.org/people/metrostock99/sounds/345086/\">Sound Source</a>\n</h3>\n\n<audio bind:this={audio}>\n\t<source src=\"sound/sound.wav\" />\n</audio>\n\n<style>\n\th1, h3 {\n\t\ttext-align: center;\n\t}\n</style>",
    "\n<div bp=\"grid\">\n  <img bp=\"offset-5@md 4@md 12@sm\" src=\"img/handwash.gif\" alt=\"How to wash your hands.\">\n</div>\n\n<style>\n  img {\n    width: 100%;\n  }\n</style>",
    "<script>\n  import {tweened} from 'svelte/motion';\n  \n  export let progress = 0;\n  export let opacity;\n\n  const tweenedProgress = tweened(100, {duration: 1000});\n  const tweenedOpacity = tweened(1, {duration: 1000});\n\n  $: tweenedProgress.set(progress * 5);\n  $: tweenedOpacity.set(opacity);\n</script>\n\n<div bp=\"grid\">\n  <div bp=\"offset-5@md 4@md 12@sm\" class=\"progress-container\">\n    <div class=\"progress-bar\" style=\"width: {$tweenedProgress}%; background-color: rgba(77, 199, 55, {$tweenedOpacity});\">\n      <span class=\"sr-only\">{progress}%</span>\n    </div>\n  </div>\n</div>\n\n<style>\n  .progress-container {\n    margin: 20px 0;\n    border: solid rgb(190, 190, 190) 1px;\n  }\n  .progress-bar {\n    height: 30px;\n    background-color: rgba(77, 199, 55, 1);\n  }\n</style>",
    "<script>\n  import ProgressBar from './ProgressBar.svelte'\n  import { createEventDispatcher } from 'svelte';\n\n  const totalSeconds = 20;\n  let secondLeft = totalSeconds;\n  let disabled = false;\n  let opacity = 1;\n  const dispatch = createEventDispatcher();\n\n  const startTimer = () => {\n    disabled = true;\n    const timer = setInterval(() => {  \n      secondLeft -= 1;\n        opacity = Math.random() + 0.2;\n      if (secondLeft === 0 ) {\n        clearInterval(timer);\n        disabled = false;\n        secondLeft = totalSeconds;\n        opacity = 1;\n        dispatch('end');\n      }\n    }, 1000);\n    \n  };  \n</script>\n\n<div bp=\"grid\">\n  <h2 bp=\"offset-5@md 4@md 12@sm\">Seconds Left: {secondLeft}</h2>\n</div>\n\n<ProgressBar progress={secondLeft} {opacity} />\n\n<div bp=\"grid\">\n  {#if disabled === false}\n  <button bp=\"offset-5@md 4@md 12@sm\" class=\"button start\" on:click={startTimer} {disabled}>Start</button>\n  {:else}\n    <div bp=\"offset-5@md 4@md 12@sm\" class=\"button button-disabled start\">\n      wash those dirty hands\n    </div>\n  {/if}\n</div>\n\n\n<style>\n  h2 {\n    margin: 0;\n  }\n  .start {\n    background-color: rgb(154, 73, 73);\n    width: 100%;\n    margin: 10px 0;\n  }\n\n  .button-disabled {\n    cursor: not-allowed; \n  }\n</style>"
  ],
  "names": [],
  "mappings": "AAyBC,gBAAE,CAAE,EAAE,cAAC,CAAC,AACP,UAAU,CAAE,MAAM,AACnB,CAAC;ACrBA,GAAG,eAAC,CAAC,AACH,KAAK,CAAE,IAAI,AACb,CAAC;ACcD,mBAAmB,eAAC,CAAC,AACnB,MAAM,CAAE,IAAI,CAAC,CAAC,CACd,MAAM,CAAE,KAAK,CAAC,IAAI,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,AACtC,CAAC,AACD,aAAa,eAAC,CAAC,AACb,MAAM,CAAE,IAAI,CACZ,gBAAgB,CAAE,KAAK,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,AACxC,CAAC;ACgBD,EAAE,cAAC,CAAC,AACF,MAAM,CAAE,CAAC,AACX,CAAC,AACD,MAAM,cAAC,CAAC,AACN,gBAAgB,CAAE,IAAI,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAClC,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,IAAI,CAAC,CAAC,AAChB,CAAC,AAED,gBAAgB,cAAC,CAAC,AAChB,MAAM,CAAE,WAAW,AACrB,CAAC"
}